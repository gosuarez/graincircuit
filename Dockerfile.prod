###########
# BUILDER #
###########

FROM python:3.12-alpine AS builder

# Set the working directory in the container
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1

# Install build dependencies
RUN apk add --no-cache gcc musl-dev libffi-dev postgresql-dev && \
    pip install --no-cache-dir pipenv

# Copy Pipfile and Pipfile.lock
COPY Pipfile Pipfile.lock /app/

# Install Python dependencies
RUN pipenv install --deploy --system

# Copy the application files
COPY . /app/

# Collect static files
RUN python manage.py collectstatic --noinput

#########
# FINAL #
#########

# Use a smaller base image for runtime
FROM python:3.12-alpine

# Set the working directory in the container
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache libpq

# Copy application files and dependencies from builder
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app

# Remove unnecessary files to reduce image size
RUN rm -rf /var/cache/apk/* /root/.cache/pip/* /usr/local/share/.cache

# Add a non-root user for security
RUN adduser -D appuser
USER appuser

# Expose the port Gunicorn will listen on
EXPOSE 8000

# Run Gunicorn as the default command with increased timeout and more workers
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "graincircuit.wsgi:application"]
